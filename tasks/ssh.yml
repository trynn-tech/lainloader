- name: Ensure .ssh directory exists
  file:
    path: "{{ ansible_env.HOME }}/.ssh"
    mode: 0700
    state: directory
  become_user: "{{ ansible_user_id }}"

- name: Check if source SSH key exists
  stat:
    path: "{{ source_key | default('./.ssh/id_rsa') }}"
  register: ssh_key_stat
  delegate_to: localhost

- name: Copy existing SSH key
  copy:
    src: "{{ source_key | default('./.ssh/id_rsa') }}"
    dest: "{{ dest_key | default(ansible_env.HOME + '/.ssh/id_rsa') }}"
    mode: 0600
  become_user: "{{ ansible_user_id }}"
  when: ssh_key_stat.stat.exists

- name: Copy existing SSH public key
  copy:
    src: "{{ source_key | default('./.ssh/id_rsa') }}.pub"
    dest: "{{ dest_key | default(ansible_env.HOME + '/.ssh/id_rsa') }}.pub"
    mode: 0644
  become_user: "{{ ansible_user_id }}"
  when: ssh_key_stat.stat.exists

- name: Generate new SSH key if it doesn't exist
  openssh_keypair:
    path: "{{ dest_key | default(ansible_env.HOME + '/.ssh/id_rsa') }}"
    type: rsa
    size: 4096
    force: no
  become_user: "{{ ansible_user_id }}"
  when: not ssh_key_stat.stat.exists

- name: Install OpenSSH using Nix
  shell: |
    . /etc/profile.d/nix.sh
    nix-env -iA nixpkgs.openssh
  become_user: "{{ ansible_user_id }}"
  when: is_arch

- name: Warn if OpenSSH installation might not be supported
  debug:
    msg: "Warning: OpenSSH installation method may not be suitable for your OS."
  when: not is_arch
