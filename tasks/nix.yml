- name: Check if Nix is installed
  shell: command -v nix >/dev/null 2>&1
  register: nix_installed
  changed_when: false
  failed_when: false

- name: Create temporary directory for Nix installation
  file:
    path: "{{ ansible_env.HOME }}/.nix-install-temp"
    state: directory
    mode: '0755'
  when: nix_installed.rc != 0

- name: Download Nix install script
  command: curl --proto '=https' --tlsv1.2 -sSfL https://nixos.org/nix/install -o {{ ansible_env.HOME }}/.nix-install-temp/nix-install.sh
  when: nix_installed.rc != 0

- name: Set execute permission on Nix install script
  file:
    path: "{{ ansible_env.HOME }}/.nix-install-temp/nix-install.sh"
    mode: '0755'
  when: nix_installed.rc != 0

- name: Create expect script for Nix installation
  copy:
    content: |
      #!/usr/bin/expect -f
      set timeout -1
      spawn sh {{ ansible_env.HOME }}/.nix-install-temp/nix-install.sh --daemon
      expect {
        "Would you like to proceed?" { send "y\r"; exp_continue }
        "Press ENTER to continue" { send "\r"; exp_continue }
        "Do you want Nix to create a new group named 'nixbld'?" { send "y\r"; exp_continue }
        "Do you want to continue?" { send "y\r"; exp_continue }
        eof
      }
    dest: "{{ ansible_env.HOME }}/.nix-install-temp/nix-install-expect.exp"
    mode: '0755'
  when: nix_installed.rc != 0

- name: Install Nix
  command: /usr/bin/expect {{ ansible_env.HOME }}/.nix-install-temp/nix-install-expect.exp
  become: yes
  when: nix_installed.rc != 0

- name: Clean up Nix installation files
  file:
    path: "{{ ansible_env.HOME }}/.nix-install-temp"
    state: absent
  when: nix_installed.rc != 0

- name: Source Nix profile
  shell: |
    . /nix/var/nix/profiles/default/etc/profile.d/nix-daemon.sh
  args:
    executable: /bin/bash
  when: nix_installed.rc != 0

- name: Verify Nix installation
  shell: |
    . /nix/var/nix/profiles/default/etc/profile.d/nix-daemon.sh
    nix --version
  args:
    executable: /bin/bash
  register: nix_version
  changed_when: false

- name: Display Nix version
  debug:
    var: nix_version.stdout
