- name: Check if Nix is installed
  shell: command -v nix >/dev/null 2>&1
  register: nix_installed
  changed_when: false
  failed_when: false

- name: Create temporary directory for Nix installation
  file:
    path: "{{ ansible_env.HOME }}/.nix-install-temp"
    state: directory
    mode: '0755'
  when: nix_installed.rc != 0

- name: Download Nix install script
  command: curl --proto '=https' --tlsv1.2 -sSfL https://nixos.org/nix/install -o {{ ansible_env.HOME }}/.nix-install-temp/nix-install.sh
  when: nix_installed.rc != 0

- name: Create expect script for Nix installation
  copy:
    content: |
      #!/usr/bin/expect -f
      log_file {{ ansible_env.HOME }}/.nix-install-temp/nix-install.log
      set timeout 600
      
      # Disable color output interpretation
      set env(TERM) "dumb"
      
      spawn sh {{ ansible_env.HOME }}/.nix-install-temp/nix-install.sh --daemon
      expect {
        -re ".*Would you like to see a more detailed list of what I will do.*\\\[y/n\\\]" {
          send_log "\nReceived: Would you like to see a more detailed list of what I will do? \[y/n\]\n"
          send "n\r"
          send_log "Sent: n\n"
          exp_continue
        }
        -re ".*Ready to continue.*\\\[y/n\\\]" {
          send_log "\nReceived: Ready to continue?\[y/n\]\n"
          send "y\r"
          send_log "Sent: y\n"
          exp_continue
        }
        -re ".*Can I use sudo.*\\\[y/n\\\]" {
          send_log "\nReceived: Can I use sudo?\[y/n\]\n"
          send "y\r"
          send_log "Sent: y\n"
          exp_continue
        }
        -re ".*return to acknowledge.*" {
          send_log "\nReceived: press enter/return to acknowledge\n"
          send "\r\n"
          send_log "Sent: <enter>\n"
          exp_continue
        }
        -re ".*installation finished.*" {
          send_log "\nInstallation finished\n"
          exit 0
        }
        timeout {
          send_log "\nTimeout occurred\n"
          exit 1
        }
        eof {
          send_log "\nEOF encountered\n"
          exit 0
        }
      }
    dest: "{{ ansible_env.HOME }}/.nix-install-temp/nix-install-expect.exp"
    mode: '0755'
  when: nix_installed.rc != 0

- name: Install Nix
  shell: |
    /usr/bin/expect {{ ansible_env.HOME }}/.nix-install-temp/nix-install-expect.exp
    exit_code=$?
    if [ $exit_code -ne 0 ]; then
      echo "Expect script failed with exit code $exit_code"
      exit $exit_code
    fi
  register: nix_install_result
  ignore_errors: yes
  when: nix_installed.rc != 0

- name: Reset shell environment
  become: yes
  become_user: trynn
  command: /bin/bash -l

- name: Clean up Nix installation files
  file:
    path: "{{ ansible_env.HOME }}/.nix-install-temp"
    state: absent

